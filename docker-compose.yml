version: "3.5"

services:
    zambda:
        build: ./zambda
        container_name: "messaging_app"
        environment:
            - REDIS_HOST=redis
        ports:
            - 8000:8000
        networks:
            - my_network
        volumes:
            - .:/app
            
    enginx:
        build: ./docker/nginx
        container_name: "enginx"
        ports:
            - 80:80
            - 443:443
        networks:
            - my_network

    redis:
        build: ./docker/redis
        container_name: "redis_database"
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        networks:
            - my_network

    celery:
        build: ./zambda
	container_name: "mycelery"
        command: celery worker --app=zambda --loglevel=info
        environment:
            - CELERY_BROKER=redis://redis:6379/0
            - CELERY_BACKEND=redis://redis:6379/0
        volumes:
            - ./var/logs/celery:/usr/src/app
        depends_on:
            - zambda
            - redis
        networks:
            - my_network

    celery-beat:
        build: ./zambda
        command: celery -A zambda beat -l info
        volumes:
            - ./var/logs:/usr/src/app/
        environment:
            - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
        depends_on:
            - redis

    flower:
        build: ./zambda
        command: flower -A zambda --port=5555 --broker=redis://redis:6379/0
        ports:
            - 5555:5555
        environment:
            - CELERY_BROKER=redis://redis:6379/0
            - CELERY_BACKEND=redis://redis:6379/0
        depends_on:
            - zambda
            - redis
            - celery
        networks:
            - my_network

volumes:
    redis_data: {}

networks:
    my_network:
        name: "my_network_test"
        driver: bridge
        # ipv4_address: 172.16.238.10 
