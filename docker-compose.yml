version: "3.5"

services:
    zambda:
        build: ./zambda
        image: &img
        container_name: "messaging_app"
        environment: &env
            - REDIS_HOST=redis
            - CELERY_BROKER=redis://redis:6379/0
            - CELERY_BACKEND=redis://redis:6379/0
        ports:
            - 8000:8000
        networks:
            - my_network
        volumes:
            - .:/app
            
    enginx:
        build: ./docker/nginx
        container_name: "enginx"
        ports:
            - 80:80
            - 443:443
        networks:
            - my_network

    redis:
        build: ./docker/redis
        container_name: "redis_database"
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        networks:
            - my_network

    celery:
        build: ./zambda
        image: *img
        command: [celery worker -A zambda -l info]
        environment: *env
        depends_on:
            - zambda
            - redis
        networks:
            - my_network
        volumes:
            # - ./var/logs/celery:/usr/src/app
            - .:/app

    celery-beat:
        build: ./zambda
        image: *img
        command: [celery beat -A zambda -l info]
        environment: *env
        depends_on:
            - redis
        volumes:
            # - ./var/logs:/usr/src/app/
            - .:/app

    flower:
        build: ./zambda
        image: *img
        command: [flower -A zambda --port=5555 --broker=redis://redis:6379/0]
        environment: *env
        ports:
            - 5555:5555
        depends_on:
            - zambda
            - redis
            - celery
        networks:
            - my_network

volumes:
    redis_data: {}

networks:
    my_network:
        name: "my_network_test"
        driver: bridge
        # ipv4_address: 172.16.238.10 
